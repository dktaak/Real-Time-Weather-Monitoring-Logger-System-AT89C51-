C51 COMPILER V9.60.0.0   INTERRUPT_DRIVER                                                  05/09/2021 20:58:12 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INTERRUPT_DRIVER
OBJECT MODULE PLACED IN .\Objects\interrupt_driver.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE interrupt_driver.c OPTIMIZE(8,SPEED) BROWSE PRINT(.\Listings\interrupt_d
                    -river.lst) TABS(2) OBJECT(.\Objects\interrupt_driver.obj)

line level    source

   1          #include"header.h"
   2          
   3          extern s8 start;
   4          extern bit flag;
   5          
   6          void int0_enable(void)
   7          {
   8   1        EA=EX0=1;
   9   1        IT0=1;//edge triggered
  10   1      }
  11          
  12          void int0_handler(void) interrupt 0
  13          {
  14   1        u8 i,j;u8 tp;s8 q[5];
  15   1        u16 addr=0x0;
  16   1          uart_tx_string("\r\n\r\n");
  17   1          for(i=0,j=0,addr=0x0000;j<7;j++)
  18   1          {
  19   2            addr=(start*30);
  20   2      //      if((j*30)%240==0)
  21   2      //        addr+=16;
  22   2      //      conv_int(j+1,q);uart_tx_string(q);
  23   2      //      if(j+1<10)
  24   2      //        uart_tx(' ');
  25   2      ////      uart_tx(' ');
  26   2      
  27   2            for(i=0;i<30;i++)
  28   2            {
  29   3            tp=i2c_byte_read_at24c512(0xA0,addr+i);
  30   3              if(tp=='s')
  31   3                break;
  32   3              uart_tx(tp);
  33   3            }
  34   2            uart_tx_string("\r\n");
  35   2          start--;
  36   2          if((start<0)&&(flag==1))
  37   2            start=7;
  38   2          else if((start<0)&&(flag==0))
  39   2            break;
  40   2          }
  41   1                uart_tx_string("\r\n");
  42   1      }
*** WARNING C280 IN LINE 14 OF interrupt_driver.c: 'q': unreferenced local variable
  43          //      for(i=0;q[i];i++)
  44          //        q[i]=i2c_byte_read_at24c512(0xA0,addr+i);
  45          //      i--;
  46          //      uart_tx_string(q);uart_tx(' ');
  47          //      
  48          //       o.tmp=i2c_byte_read_at24c512(0xA0,addr+i++);
  49          //       conv_int(o.tmp,q);
  50          //      uart_tx_string(q);uart_tx(' ');
  51          //      if(o.tmp<10&&o.tmp>-10)
  52          //        uart_tx(' ');
  53          //       
C51 COMPILER V9.60.0.0   INTERRUPT_DRIVER                                                  05/09/2021 20:58:12 PAGE 2   

  54          //       o.pot=i2c_byte_read_at24c512(0xA0,addr+i++);
  55          //       o.pot=(o.pot<<8)|(i2c_byte_read_at24c512(0xA0,addr+i++));
  56          //       conv_float(adc_vtg,q);
  57          //      uart_tx_string(q);uart_tx(' ');
  58          //        
  59          //       o.ldr=i2c_byte_read_at24c512(0xA0,addr+i++);
  60          //       o.ldr=(o.ldr<<8)|(i2c_byte_read_at24c512(0xA0,addr+i++));
  61          //       conv_float(adc_per,q);
  62          //       uart_tx_string(q);
  63          //        
  64          //      uart_tx_string("\r\n");
  65          //      
  66          //}
  67          
  68          
  69          //void int0_disable(void)
  70          //{
  71          //  EA=EX0=0;
  72          //  //IT0=1;//no matter
  73          //}
  74          //  led=~led;
  75          //  lcd_string("SW pressed");
  76          //  delay(1000);
  77          //  lcd_cmd(0x1);
  78          //}
  79          
  80          
  81          //void int0_handler(void) interrupt 0
  82          //{
  83          //  u8 a[15];
  84          //  uart_rx_string(a,15);
  85          //  lcd_string(a);
  86          //}
  87          
  88          
  89          /////////////////////////////////////////////////////////////
  90          
  91          //void timer0_enable()
  92          //{
  93          //  TMOD=0x1;
  94          //  TH0=0x3c;
  95          //  TL0=0XB0;
  96          //  EA=ET0=1;
  97          //  TR0=1;
  98          //}
  99          
 100          //void timer0_handler(void) interrupt 1
 101          //{
 102          //  static char i;
 103          //  TR0=0;
 104          //  
 105          //  i++;
 106          //  if(i==20)
 107          //  {
 108          //    led=~led;
 109          //    i=0;
 110          //  }
 111          //  TH0=0x3c;
 112          //  TL0=0XB0;
 113          //  TR0=1;
 114          //}
 115          
C51 COMPILER V9.60.0.0   INTERRUPT_DRIVER                                                  05/09/2021 20:58:12 PAGE 3   

 116          ////////////////////////////////////////////////////////
 117          /*
 118          void uart_interrupt_enable(void)
 119          {
 120            ES=EA=1;
 121          }
 122          //void uart_interrupt_disable(void)
 123          //{
 124          //  ES=EA=0;
 125          //}
 126          //extern u8 arr[20];
 127          //extern bit flag;//declare single bit_
 128          //extern u8 i;
 129          
 130          void uart_handler(void) interrupt 4//auto called by cpu; no need to declare prototype of isr
 131          {
 132              //only x code_ here
 133              static u8 i=0;
 134              if(RI==1)//chking for any uart _interrupt
 135              {
 136                RI=0;//imp
 137                arr[i]=SBUF;
 138                uart_tx(arr[i]);
 139                i++;
 140                if((arr[i-1]==Enter_key))
 141                {
 142                  arr[i-1]=0;
 143                  i=0;
 144                  flag=1;
 145                }
 146              else if((i==19))
 147                {
 148                  i=0;
 149                  arr[19]='\0';
 150                  flag=1;
 151                }
 152              }
 153          }
 154          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    221    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
